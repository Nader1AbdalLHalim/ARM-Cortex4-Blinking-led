/**********************************************************************************************************************

 *  FILE DESCRIPTION
 *  -------------------------------------------------------------------------------------------------------------------
 *         File:  IntCrtl.h
 *       Module:  IntCrtl
 *
 *  Description:  header file for NVIC Module    
 *  
 *********************************************************************************************************************/
#ifndef IntCrtl_H
#define IntCrtl_H

/**********************************************************************************************************************
 * INCLUDES
 *********************************************************************************************************************/
#include "Std_Types.h"
#include "IntCtrl_Types.h"
#include "IntCtrl_Cfg.h"
#include "Mcu_Hw.h"
  

/*===========================================================*
 *  Nested Vectored Interrupt Controller (NVIC) REGISTERS    *
 *========================================================== */
 
#define PRIX(i)                         *((volatile uint32*)(CORTEXM4_PERI_BASE_ADDRESS+0x0400+((i/4)*4)))               
#define ENX(n)                          *((volatile uint32*)(CORTEXM4_PERI_BASE_ADDRESS+0x0100+((n/32)*32)))               
#define DISX(n)                         *((volatile uint32*)(CORTEXM4_PERI_BASE_ADDRESS+0x0180+((n/32)*32))) 
#define ACTIVE(n)                      *((volatile uint32*)(CORTEXM4_PERI_BASE_ADDRESS+0x0300+((n/32)*32)))               
#define UNPEND(n)                     *((volatile uint32*)(CORTEXM4_PERI_BASE_ADDRESS+0x0280+((n/32)*32)))               
#define PEND(n)                       *((volatile uint32*)(CORTEXM4_PERI_BASE_ADDRESS+0x0200+((n/32)*32)))               



/*$$$$$$$$$$$$$$$$$ FOR APINT API $$$$$$$$$$$$$$$$$*/
#define VECTKEY_APINT								      0x05FA
#define VECTKEY_Position_APINT						16
#define APINT_PRIGROUP_Position					   8
/**********************************************************************************************************************
 *  GLOBAL FUNCTION MACROS
 *********************************************************************************************************************/


/**********************************************************************************************************************
 *  GLOBAL DATA TYPES AND STRUCTURES
 *********************************************************************************************************************/


/**********************************************************************************************************************
 *  GLOBAL DATA PROTOTYPES
 *********************************************************************************************************************/

 
/**********************************************************************************************************************
 *  GLOBAL FUNCTION PROTOTYPES
 *********************************************************************************************************************/
 

void Intrupt_Init(void);
static void Set_Grouping_Priority (void); 
void SetPriority(IntCtrl_InterruptType IntruptNum,uint32 PriorityNum);
void EnableIntrupt( IntCtrl_InterruptType IntruptNum);
void DisableIntrupt(IntCtrl_InterruptType IntruptNum );

#endif  /* IntCrtl_H */

/**********************************************************************************************************************
 *  END OF FILE: IntCrtl.h
 *********************************************************************************************************************/
